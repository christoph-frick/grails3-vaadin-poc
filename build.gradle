buildscript {
    ext {
        grailsVersion = project.grailsVersion
        gradleVaadinPluginVersion = '0.10.2'
    }
    repositories {
        mavenLocal()
        maven { url "https://repo.grails.org/grails/core" }
    }
    dependencies {        
        classpath "org.grails:grails-gradle-plugin:$grailsVersion"
        classpath 'com.bertramlabs.plugins:asset-pipeline-gradle:2.5.0'
        classpath "org.grails.plugins:hibernate:4.3.10.5"
        classpath "fi.jasoft.plugin:gradle-vaadin-plugin:$gradleVaadinPluginVersion"
    }
}

plugins {
    id "io.spring.dependency-management" version "0.5.2.RELEASE"
}

version "0.1"
group "g309"

apply plugin: "spring-boot"
apply plugin: "war"
apply plugin: "asset-pipeline"
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: "org.grails.grails-web"
apply plugin: "org.grails.grails-gsp"
apply plugin: 'fi.jasoft.plugin.vaadin'

ext {
    grailsVersion = project.grailsVersion
    gradleWrapperVersion = project.gradleWrapperVersion
    vaadinVersion = '7.5.9'
    vaadin4springVersion = '0.0.5.RELEASE'
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

assets {
    minifyJs = true
    minifyCss = true
}

repositories {
    mavenLocal()
    maven { url "https://repo.grails.org/grails/core" }
}

dependencyManagement {
    imports {
        mavenBom "org.grails:grails-bom:$grailsVersion"
    }
    applyMavenExclusions false
}

vaadin {
	vaadin.version = vaadinVersion
	widgetset jar.baseName
	// debug is managed by vaadin4spring
	vaadin.debug = false
	// in 0.9.6 (fixed in 0.9.7) vaadin 7.4 made problems due to opera target
	vaadin.manageWidgetset = false
	// we manage repos ourself (failed with gradle 2.1 and 0.8 of the plugin)
	vaadin.manageRepositories = false
	// bend the directory to compile the themes into the build dir
	vaadin.plugin.themesDirectory = 'build/resources/main/VAADIN/themes/'
	// bend the directory to compile the widgetset into the build dir
	vaadin.gwt.outputDirectory = file('build/resources/main/')
}

// pull in vaadin tasks several of the springboot tasks shall depend on
jar {
	dependsOn vaadinCompileWidgetset, vaadinCompileThemes
}
bootRun {
	dependsOn vaadinCompileWidgetset, vaadinCompileThemes
}

// must be done last, so both plugins setup their stuff already
project.afterEvaluate {
	// get the runtime vaadin libs into the jar
	jar {
		into('lib') {
			from configurations.vaadin
		}
	}
	// pickup the runtime vaadin libs for bootRun
	bootRun {
		classpath += configurations.vaadin
	}
}

dependencies {
    compile "org.springframework.boot:spring-boot-starter-logging"
    compile "org.springframework.boot:spring-boot-starter-actuator"
    compile "org.springframework.boot:spring-boot-autoconfigure"
    compile "org.springframework.boot:spring-boot-starter-tomcat"
    compile("org.vaadin.spring:spring-boot-vaadin:${vaadin4springVersion}") { exclude group: 'com.vaadin' }
    compile "org.grails:grails-dependencies"
    compile "org.grails:grails-web-boot"

    compile "org.grails.plugins:hibernate"
    compile "org.grails.plugins:cache"
    compile "org.hibernate:hibernate-ehcache"
    compile "org.grails.plugins:scaffolding"

    runtime "org.grails.plugins:asset-pipeline"

    testCompile "org.grails:grails-plugin-testing"
    testCompile "org.grails.plugins:geb"

    // Note: It is recommended to update to a more robust driver (Chrome, Firefox etc.)
    testRuntime 'org.seleniumhq.selenium:selenium-htmlunit-driver:2.44.0'

    console "org.grails:grails-console"
}

// Exclude all deps, that pull in newer versions of the critical libraries for
// widgetset compilation here (e.g. validation-api).  If there are errors
// building the widgetset, check with `./gradlew dependencies` first.
configurations {
	'vaadin-client' {
		exclude module: 'spring-boot-starter-web'
		exclude module: 'spring-boot-vaadin'
	}
}

task wrapper(type: Wrapper) {
    gradleVersion = gradleWrapperVersion
}


